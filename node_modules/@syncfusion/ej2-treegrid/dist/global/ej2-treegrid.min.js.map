{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            var _loop_1 = function (i) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this_1.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRecord_1 = this_1.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord_1.index + 'level' + (childRecord_1.level + 1));\n                    });\n                    if (childRows.length) {\n                        this_1.collectExpandingRecs({ record: childRecord_1, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this_1.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                _loop_1(i);\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            if (this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.json) {\n                treeGridDataSource = this.parent.dataSource.dataSource.json;\n            }\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (proxy.dataSource instanceof DataManager) {\n            if (proxy.dataSource.dataSource.offline && proxy.dataSource.dataSource.json) {\n                tempDataSource = proxy.dataSource.dataSource.json;\n            }\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        var rowPositionHeight = rowEle.offsetTop - scrollTop;\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid') {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = tObj.grid.dataSource[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(recordIndex1, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager) {\n            this.treeGridData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                tObj.dataSource.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource = tObj.dataSource;\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = tObj.dataSource;\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                tObj.dataSource.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragandDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { RowDD } from '../actions/rowdragdrop';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'RowDD',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.rowDragAndDropModule = new RowDD(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && isNullOrUndefined(this.dataStateChange)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (isNullOrUndefined(this.dataStateChange) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        var movableRows = this.getMovableRows().filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            movableRows[i].style.display = displayAction;\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]];\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = movableRows.filter(function (e) {\n            return e.classList.contains('e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n        });\n        for (var i = 0; i < frozenrows.length; i++) {\n            frozenrows[i].style.display = args.action;\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","taskData","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","Math","ceil","random","rowDetails","gridRows","parentRow","rows","this_1","isBlazor","targetEle","getElementsByClassName","childRecord_1","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","totalRecordsCount","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","dataResult","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","treeGridDataSource","offline","Rowdraging","rowDropped","rowsAdded","rowsRemoved","reorderRows","fromIndexes","toIndex","position","dropPosition","dropIndex","dropRows","refresh","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","remove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","undefined","addErrorElem","rowTop","toolHeight","toolbar","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","getContent","firstElementChild","rowPositionHeight","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","slice","call","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","rowDropSettings","targetID","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","rowDragAndDropModule","dropElement","ej2_instances","cancel","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","getSelectedRecords","indexes","selectedRecord","isByMethod","getSelectedRowIndexes","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_1","draggedRecords","rowDragMoudule","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","renderComplete","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","promise","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","detailDataBound","actionBegin","actionComplete","updateTreeGridModel","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","mergeColumns","storedColumn","getContentTable","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","rows_2","movableRows","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","crudAction","beginAdd","keyPressed","contentready","editActionEvents","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","freezeModule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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"}