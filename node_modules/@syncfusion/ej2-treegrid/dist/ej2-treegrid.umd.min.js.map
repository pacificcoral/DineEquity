{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            var _loop_1 = function (i) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this_1.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRecord_1 = this_1.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord_1.index + 'level' + (childRecord_1.level + 1));\n                    });\n                    if (childRows.length) {\n                        this_1.collectExpandingRecs({ record: childRecord_1, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this_1.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                _loop_1(i);\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            if (this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.json) {\n                treeGridDataSource = this.parent.dataSource.dataSource.json;\n            }\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (proxy.dataSource instanceof DataManager) {\n            if (proxy.dataSource.dataSource.offline && proxy.dataSource.dataSource.json) {\n                tempDataSource = proxy.dataSource.dataSource.json;\n            }\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        var rowPositionHeight = rowEle.offsetTop - scrollTop;\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid') {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = tObj.grid.dataSource[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(recordIndex1, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager) {\n            this.treeGridData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                tObj.dataSource.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource = tObj.dataSource;\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = tObj.dataSource;\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                tObj.dataSource.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragandDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { RowDD } from '../actions/rowdragdrop';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'RowDD',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.rowDragAndDropModule = new RowDD(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && isNullOrUndefined(this.dataStateChange)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (isNullOrUndefined(this.dataStateChange) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        var movableRows = this.getMovableRows().filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            movableRows[i].style.display = displayAction;\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]];\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = movableRows.filter(function (e) {\n            return e.classList.contains('e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n        });\n        for (var i = 0; i < frozenrows.length; i++) {\n            frozenrows[i].style.display = args.action;\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","loadChildOnDemand","Math","ceil","random","rowDetails","gridRows","parentRow","rows","isBlazor","this_1","targetEle","getElementsByClassName","childRecord_1","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","events.actionComplete","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","events.crudAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","treeGridDataSource","offline","events.rowdraging","Rowdraging","events.rowDropped","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","reorderRows","fromIndexes","toIndex","position","dropPosition","dropIndex","dropRows","refresh","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","remove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","undefined","addErrorElem","rowTop","toolHeight","toolbar","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","getContent","firstElementChild","rowPositionHeight","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","slice","call","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","rowDropSettings","targetID","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","rowDragAndDropModule","dropElement","ej2_instances","cancel","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","getSelectedRecords","indexes","selectedRecord","isByMethod","getSelectedRowIndexes","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_1","draggedRecords","rowDragMoudule","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","renderComplete","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.recordDoubleClick","events.detailDataBound","events.actionBegin","updateTreeGridModel","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","mergeColumns","storedColumn","getContentTable","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","events.localPagedExpandCollapse","displayAction","detailrows","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","rows_2","movableRows","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","editActionEvents","events.doubleTap","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","freezeModule"],"mappings":"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AW,yBAAqB,GAC5CE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,qBAAiB,GACxCE,IACIq4B,aAAYn3B,IACbihB,EAASriB,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,0BAAsB,GAC7CE,IACIq4B,aAAY/X,KACb6B,EAASriB,UAAW,oBAAgB,GACvCE,IACIq4B,aAAYC,oBACbnW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIc,cACDqhB,EAASriB,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,yBAAqB,GAC5CE,IACIq4B,aAAYnW,KACbC,EAASriB,UAAW,oBAAgB,GACvCE,IACIiB,gBAAe8gB,KAChBI,EAASriB,UAAW,kBAAc,GACrCE,IACIq4B,aAAYrW,KACbG,EAASriB,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,sBAAkB,GACzCE,IACIc,cACDqhB,EAASriB,UAAW,sBAAkB,GACzCE,IACIq4B,aAAYr3B,IACbmhB,EAASriB,UAAW,sBAAkB,GACzCE,IACIq4B,aAAYttB,KACboX,EAASriB,UAAW,sBAAkB,GACzCE,IACIc,cACDqhB,EAASriB,UAAW,eAAW,GAClCE,IACIc,cACDqhB,EAASriB,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACVqhB,EAASriB,UAAW,iBAAa,GACpCE,IACIc,cACDqhB,EAASriB,UAAW,wBAAoB,GAC3CE,IACIc,cACDqhB,EAASriB,UAAW,uBAAmB,GAC1CE,IACIc,cACDqhB,EAASriB,UAAW,mBAAe,GACtCE,IACIc,WAAS,OACVqhB,EAASriB,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,mBAAe,GACtCE,IACIc,WAAS,SACVqhB,EAASriB,UAAW,cAAU,GACjCE,IACIc,WAAS,SACVqhB,EAASriB,UAAW,aAAS,GAChCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACVqhB,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,eAAW,GAClCE,IACIu4B,WACDpW,EAASriB,UAAW,YAAQ,GAC/BE,IACIu4B,WACDpW,EAASriB,UAAW,iBAAa,GACpCE,IACIu4B,WACDpW,EAASriB,UAAW,gBAAY,GACnCE,IACIu4B,WACDpW,EAASriB,UAAW,kBAAc,GACrCE,IACIu4B,WACDpW,EAASriB,UAAW,iBAAa,GACpCE,IACIu4B,WACDpW,EAASriB,UAAW,gBAAY,GACnCE,IACIu4B,WACDpW,EAASriB,UAAW,mBAAe,GACtCE,IACIu4B,WACDpW,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,iBAAa,GACpCE,IACIu4B,WACDpW,EAASriB,UAAW,gBAAY,GACnCE,IACIu4B,WACDpW,EAASriB,UAAW,qBAAiB,GACxCE,IACIu4B,WACDpW,EAASriB,UAAW,iBAAa,GACpCE,IACIu4B,WACDpW,EAASriB,UAAW,yBAAqB,GAC5CE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,yBAAqB,GAC5CE,IACIu4B,WACDpW,EAASriB,UAAW,oBAAgB,GACvCE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,oBAAgB,GACvCE,IACIu4B,WACDpW,EAASriB,UAAW,mBAAe,GACtCE,IACIu4B,WACDpW,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,qBAAiB,GACxCE,IACIu4B,WACDpW,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,qBAAiB,GACxCE,IACIu4B,WACDpW,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,oBAAgB,GACvCE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,mBAAe,GACtCE,IACIu4B,WACDpW,EAASriB,UAAW,gBAAY,GACnCE,IACIu4B,WACDpW,EAASriB,UAAW,kBAAc,GACrCE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,kBAAc,GACrCE,IACIu4B,WACDpW,EAASriB,UAAW,kBAAc,GACrCE,IACIu4B,WACDpW,EAASriB,UAAW,sBAAkB,GACzCE,IACIu4B,WACDpW,EAASriB,UAAW,qBAAiB,GACxCE,IACIu4B,WACDpW,EAASriB,UAAW,mBAAe,GACtCE,IACIu4B,WACDpW,EAASriB,UAAW,oBAAgB,GACvCE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,uBAAmB,GAC1CE,IACIu4B,WACDpW,EAASriB,UAAW,wBAAoB,GAC3CE,IACIu4B,WACDpW,EAASriB,UAAW,eAAW,GAClCE,IACIu4B,WACDpW,EAASriB,UAAW,oBAAgB,GACvCE,IACIu4B,WACDpW,EAASriB,UAAW,0BAAsB,GAC7CE,IACIu4B,WACDpW,EAASriB,UAAW,eAAW,GAClCE,IACIc,YAAU,IACXqhB,EAASriB,UAAW,wBAAoB,GAC3CE,IACIq4B,aAAYrtB,KACbmX,EAASriB,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACVqhB,EAASriB,UAAW,wBAAo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"}