{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.connectors.length === 0)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            var undoObj = cloneObject(shape.lanes[laneIndex]);\n            removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                    redoObject: cloneObject(lane), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            shape.lanes.splice(laneIndex, 1);\n            var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                (findStartLaneIndex(swimLane) + laneIndex);\n            if (shape.orientation === 'Horizontal') {\n                row = grid.rows[index];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeRow(index);\n            }\n            else {\n                swimLane.width = (swimLane.width !== undefined) ?\n                    swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                for (i = 0; i < grid.rows.length; i++) {\n                    cell = grid.rows[i].cells[index];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeColumn(index);\n            }\n            swimLane.width = swimLane.wrapper.width = grid.width;\n            swimLane.height = swimLane.wrapper.height = grid.height;\n            swimLaneMeasureAndArrange(swimLane);\n            ChangeLaneIndex(diagram, swimLane, index);\n            diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                parentHtmlElement.appendChild(htmlElement);\n                canvas.appendChild(parentHtmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var layer = getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        node.offsetX += offsetX;\n                        node.offsetY += offsetY;\n                        node.width += width;\n                        node.height += height;\n                        node.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(node, {}, {\n                            offsetX: node.offsetX, offsetY: node.offsetY,\n                            width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                        });\n                        objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change)\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width / 2 + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height / 2 + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(currentObj.id + '_html_element', elementId);\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if (layer === undefined || (layer && layer.visible)) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    this.updateDiagramObject(actualObject);\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'];\n        var top = diagram.spatialSearch['pageTop'];\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        this.updateNodesInVirtualRegion(diagram.nodes);\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.offsetX, y: this.startNode.offsetY } :\n                    { x: this.targetNode.offsetX, y: this.targetNode.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            if (!sourcePortID && this.startNode) {\n                for (var i = sourceLeft.gridX; i <= sourceRight.gridX; i++) {\n                    grid = this.gridCollection[i][sourceLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n                for (var i = sourceTop.gridY; i <= sourceBottom.gridY; i++) {\n                    grid = this.gridCollection[sourceTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.sourceGridCollection.indexOf(grid) === -1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n            }\n            else {\n                this.sourceGridCollection.push(this.startGrid);\n            }\n            if (!targetPortID && this.targetNode) {\n                for (var i = targetLeft.gridX; i <= targetRight.gridX; i++) {\n                    grid = this.gridCollection[i][targetLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                for (var i = targetTop.gridY; i <= targetBottom.gridY; i++) {\n                    grid = this.gridCollection[targetTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.targetGridCollection.indexOf(grid) === -1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                if (this.targetGridCollection.indexOf(this.targetGrid) === -1) {\n                    if (this.targetGrid.nodeId.length > 1 && this.targetGridCollection.length === 1) {\n                        this.targetGrid = this.targetGridCollection[0];\n                    }\n                }\n            }\n            else {\n                this.targetGridCollection.push(this.targetGrid);\n            }\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours);\n            this.neigbour(startGrid, 'right', neigbours);\n            this.neigbour(startGrid, 'bottom', neigbours);\n            this.neigbour(startGrid, 'left', neigbours);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && this.sourceGridCollection.indexOf(nearGrid) === -1) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Event, isBlazor } from '@syncfusion/ej2-base';\nimport { Component, Property, Complex, CollectionFactory, ChildProperty } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","currentSymbol","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","phases","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","isBlazor","cause","cancel","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Port","Complex","Connect","Hyperlink","Annotation","parentObj","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelectedNodeProperties","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","updateEventValue","addNodeToLane","laneId","hideTooltip","addNode","addConnector","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","startGridNode","getIntermediatePoints","updateConnectorSegments","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","neigbours","findNearestNeigbours","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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,qBAAkB,IACxCU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACImB,cACD9e,EAAQid,UAAW,mBAAgB,IACtCU,IACImB,cACD9e,EAAQid,UAAW,2BAAwB,IAC9CU,IACImB,cACD9e,EAAQid,UAAW,wBAAqB,IAC3CU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACImB,cACD9e,EAAQid,UAAW,qBAAkB,IACxCU,IACImB,cACD9e,EAAQid,UAAW,wBAAqB,IAC3CU,IACImB,cACD9e,EAAQid,UAAW,oBAAiB,IACvCU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACIqC,gBAAekhD,KAChBlhE,EAAQid,UAAW,mBAAgB,IACtCU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACIwH,aAAY5mC,KACbyhB,EAAQid,UAAW,oBAAiB,IACvCU,IACIwH,aAAYwlB,KACb3qC,EAAQid,UAAW,qBAAkB,IACxCU,IACIwH,aAAYqmB,KACbxrC,EAAQid,UAAW,aAAU,IAChCU,IACIwH,aAAY4M,KACb/xB,EAAQid,UAAW,qBAAkB,IACxCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,gBAAa,IACnCU,IACIohE,WACD/+E,EAAQid,UAAW,gBAAa,IACnCU,IACIohE,WACD/+E,EAAQid,UAAW,eAAY,IAClCU,IACIohE,WACD/+E,EAAQid,UAAW,YAAS,IAC/BU,IACIohE,WACD/+E,EAAQid,UAAW,oBAAiB,IACvCU,IACIohE,WACD/+E,EAAQid,UAAW,yBAAsB,IAC5CU,IACIohE,WACD/+E,EAAQid,UAAW,kBAAe,IACrCU,IACIohE,WACD/+E,EAAQid,UAAW,eAAY,IAClCU,IACIohE,WACD/+E,EAAQid,UAAW,mBAAgB,IACtCU,IACIohE,WACD/+E,EAAQid,UAAW,sBAAmB,IACzCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,uBAAoB,IAC1CU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,qBAAkB,IACxCU,IACIohE,WACD/+E,EAAQid,UAAW,qBAAkB,IACxCU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,mBAAgB,IACtCU,IACIohE,WACD/+E,EAAQid,UAAW,uBAAoB,IAC1CU,IACIohE,WACD/+E,EAAQid,UAAW,4BAAyB,IAC/CU,IACIohE,WACD/+E,EAAQid,UAAW,0BAAuB,IAC7CU,IACIohE,WACD/+E,EAAQid,UAAW,6BAA0B,IAChDU,IACIohE,WACD/+E,EAAQid,UAAW,6BAA0B,IAChDU,IACIohE,WACD/+E,EAAQid,UAAW,8BAA2B,IACjDU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,cAAW,IACjCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,gBAAa,IACnCU,IACIohE,WACD/+E,EAAQid,UAAW,sBAAmB,IACzCU,IACIohE,WACD/+E,EAAQid,UAAW,kCAA+B,IACrDU,IACIohE,WACD/+E,EAAQid,UAAW,uBAAoB,IAC1CU,IACIohE,WACD/+E,EAAQid,UAAW,qBAAkB,IACxCU,IACIqC,gBAAeumC,KAChBvmD,EAAQid,UAAW,aAAU,IAChCU,IACIohE,WACD/+E,EAAQid,UAAW,WAAQ,IACvBjd,GACTkxB,aCv0NE8tD,GAAgC,WAChC,QAASA,GAAetnG,GACpBY,KAAKZ,QAAUA,EAkxBnB,MA5wBAsnG,GAAe/hE,UAAUqxD,cAAgB,SAAUt9D,GAC/C,GAAIiuE,GACAliB,EACAxkF,EAGAod,EADA34B,EAAO,OAEPkiH,KACAh3G,EAAS8oC,EAAQ9oC,WACjBowB,EAAS0Y,GAAWA,EAAQ1Y,OAAS0Y,EAAQ1Y,OAA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"}